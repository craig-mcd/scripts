#!/usr/bin/env python3

"""
Coin Toss

Heads or Tails
"""

from random import randint
import sys


class Coin:
    """
    Coin

    Simple representation of a coin in the game
    """

    def __init__(self, heads="Heads", tails="Tails"):
        self.__heads = heads
        self.__tails = tails
        self.__heads_count = 0
        self.__tails_count = 0
        self.__limit = 5
        self.__runs = 1
        self.__data = []

    def __str__(self):
        return "\n".join(self.__data)

    def flip(self):
        """Flip the coin x times for y runs"""

        for _ in range(self.__runs):
            for _ in range(self.__limit):
                if randint(0, 1) == 1:
                    self.__heads_count += 1
                else:
                    self.__tails_count += 1

            self.__update()

    def set_heads(self, heads):
        """Set name of coin"""
        self.__heads = heads

    def set_tails(self, tails):
        """Set name of coin"""
        self.__tails = tails

    def set_limit(self, limit):
        """Set the limit of each run"""
        self.__limit = max(limit, 5)

    def set_runs(self, runs):
        """Set the number of runs"""
        self.__runs = max(runs, 1)

    def __update(self):
        """Update after each run"""
        self.__data.append(
            f"{self.__heads}: {self.__heads_count}, {self.__tails}: {self.__tails_count}"
        )
        self.__heads_count = 0
        self.__tails_count = 0


def main():
    """entry point"""

    coin: Coin = Coin()

    if len(sys.argv) >= 3:
        # can supply coin names
        coin.set_heads(sys.argv[1])
        coin.set_tails(sys.argv[2])

    if len(sys.argv) >= 4:
        # can provide number of tosses
        coin.set_limit(int(sys.argv[3]))

    if len(sys.argv) >= 5:
        # can provide number of runs
        coin.set_runs(int(sys.argv[4]))

    coin.flip()
    print(coin)


if __name__ == "__main__":
    main()
